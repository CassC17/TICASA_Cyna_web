openapi: 3.0.0
info:
  title: Ticasa API
  description: API pour la gestion des produits et utilisateurs
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Serveur local

paths:
  /auth/register:
    post:
      summary: Enregistrer un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: Dupont
                prenom:
                  type: string
                  example: Jean
                email:
                  type: string
                  format: email
                  example: jean.dupont@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        "201":
          description: Utilisateur enregistré avec succès
        "400":
          description: Erreur de validation des données

  /auth/login:
    post:
      summary: Connecter un utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: jean.dupont@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        "200":
          description: Connexion réussie, retourne un token
        "401":
          description: Email ou mot de passe incorrect

  /auth/logout:
    post:
      summary: Déconnecter un utilisateur
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Déconnexion réussie
        "401":
          description: Token invalide ou absent

  /products:
    post:
      summary: Ajouter un produit
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Laptop Dell
                price:
                  type: number
                  example: 999.99
                fournisseur:
                  type: string
                  example: Dell
                categoryId:
                  type: integer
                  example: 1
                activePromoId:
                  type: integer
                  nullable: true
                  example: null
      responses:
        "201":
          description: Produit ajouté avec succès
        "400":
          description: Erreur de validation des données

  /products/{id}:
    put:
      summary: Modifier un produit
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Laptop HP
                price:
                  type: number
                  example: 899.99
                fournisseur:
                  type: string
                  example: HP
                categoryId:
                  type: integer
                  example: 2
      responses:
        "200":
          description: Produit mis à jour avec succès
        "404":
          description: Produit non trouvé
        "400":
          description: Erreur de validation

    delete:
      summary: Supprimer un produit
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Produit supprimé avec succès
        "404":
          description: Produit non trouvé
        "400":
          description: ID invalide

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
